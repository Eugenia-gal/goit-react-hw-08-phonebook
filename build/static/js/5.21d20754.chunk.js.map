{"version":3,"sources":["Views/RegisterView/RegisterView.styled.jsx","Views/RegisterView/RegisterView.jsx","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js","../node_modules/warning/warning.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js"],"names":["RegisterContainer","Invitation","CustomForm","Form","RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","onSubmit","e","preventDefault","userDetails","authOperations","register","toast","error","Group","className","controlId","Label","Control","type","placeholder","onChange","Button","variant","FormContext","React","FormCheckLabel","ref","bsPrefix","htmlFor","props","useContext","useBootstrapPrefix","_jsx","classNames","displayName","FormCheck","id","bsSwitchPrefix","inline","disabled","isValid","isInvalid","feedbackTooltip","feedback","style","title","label","children","as","innerFormContext","useMemo","hasLabel","input","FormCheckInput","Provider","_jsxs","_Fragment","Feedback","tooltip","Object","assign","Input","createWithBsPrefix","FormGroup","Component","context","DEVICE_SIZES","Col","spans","classes","forEach","brkPoint","span","offset","order","propValue","infix","push","useCol","colProps","length","FormLabel","column","visuallyHidden","columnClass","defaultProps","FormRange","FormSelect","size","htmlSize","FormText","muted","Switch","FloatingLabel","propTypes","_ref","PropTypes","any","validated","bool","elementType","FormControl","Floating","FormFloating","Check","Text","Range","Select","warning","module","exports","string","plaintext","readOnly","rHyphen","pascalCase","str","toUpperCase","replace","_","chr","slice","prefix","BsComponent","Tag","resolvedPrefix"],"mappings":"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","file":"static/js/5.21d20754.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport const RegisterContainer = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nexport const Invitation = styled.h2`\r\n  font-size: 22px;\r\n  color: #1a791f;\r\n`;\r\nexport const CustomForm = styled(Form)`\r\n  width: 400px;\r\n`;\r\nexport const CustomButton = styled(Button)`\r\n  margin-top: 20px;\r\n`;\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-hot-toast';\r\nimport authOperations from 'redux/Authorization/auth-operations';\r\nimport {\r\n  RegisterContainer,\r\n  CustomForm,\r\n  Invitation,\r\n} from './RegisterView.styled';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction RegisterView() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (email === '' || password === '' || name === '') {\r\n      toast.error('Enter all fields please');\r\n      return;\r\n    }\r\n    const userDetails = { name, email, password };\r\n    dispatch(authOperations.register(userDetails));\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <RegisterContainer>\r\n      <CustomForm onSubmit={handleSubmit}>\r\n        <Invitation>Welcome to the registration page!</Invitation>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"name\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"Enter name\"\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            placeholder=\"Enter email\"\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            placeholder=\"Enter password\"\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Register\r\n        </Button>\r\n      </CustomForm>\r\n    </RegisterContainer>\r\n  );\r\n}\r\n\r\nexport default RegisterView;\r\n","import * as React from 'react'; // TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", { ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = label != null && label !== false && !children;\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, label && bsPrefix, inline && `${bsPrefix}-inline`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), (isValid || isInvalid) && /*#__PURE__*/_jsx(Feedback, {\n          type: isValid ? 'valid' : 'invalid',\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, { ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const spans = [];\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span = true,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...classes, ...spans)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column,\n  visuallyHidden,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", { ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", { ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, { ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}"],"sourceRoot":""}
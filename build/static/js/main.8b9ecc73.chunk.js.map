{"version":3,"sources":["redux/Authorization/auth-operations.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-slices.js","redux/Authorization/auth-slices.js","redux/store.js","Components/Container/Container.styled.jsx","Components/Container/Container.jsx","Components/AppBar/AppBar.styled.jsx","redux/Authorization/auth-selectors.js","Components/NavMenu/NavMenu.styled.jsx","Components/NavMenu/NavMenu.jsx","Components/UserMenu/UserMenu.styled.jsx","Components/UserMenu/UserMenu.jsx","Components/AuthMenu/AuthMenu.styled.jsx","Components/AuthMenu/AuthMenu.jsx","images/phonebook.png","Components/AppBar/AppBar.jsx","Components/Routes/PrivateRoute.jsx","Components/Routes/PublicRoute.jsx","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","userDetails","a","rejectWithValue","post","data","toast","success","error","message","logIn","operations","logOut","_","refreshUser","thunkAPI","state","getState","persistedToken","auth","get","getContacts","result","addContact","newContact","result1","contactNames","map","contact","name","indexOf","console","log","deleteContact","id","delete","contactsSlice","createSlice","initialState","items","status","extraReducers","fulfilled","payload","pending","rejected","filter","filterSlice","reducers","filterContacts","contacts","reducer","actions","authSlice","user","email","isLoggedIn","isRefresh","action","authPersistConfig","key","storage","whitelist","phonebookReducer","combineReducers","store","configureStore","persistReducer","authReducer","phonebook","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","CustomContainer","Container","children","CustomHeader","authSelectors","getIsLoggedIn","getUserEmail","getIsRefreshingCurrent","CustomNav","CustomNavLink","NavLink","Invitation","NavMenu","useSelector","to","UserInvitation","LogOutBtn","Button","UserMenu","dispatch","useDispatch","variant","type","onClick","authOperations","AuthNav","AppBar","src","alt","width","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","RegisterView","lazy","LoginView","ContactsView","App","isRefreshing","useEffect","fallback","path","from","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.8b9ecc73.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { toast } from 'react-hot-toast';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = createAsyncThunk(\r\n  'auth/register',\r\n  async (userDetails, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/users/signup', userDetails);\r\n      token.set(data.token);\r\n      toast.success('You have successfully registered!');\r\n      return data;\r\n    } catch (error) {\r\n      toast.error('Oppps, something went wrong! Try again please');\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nconst logIn = createAsyncThunk(\r\n  'auth/login',\r\n  async (userDetails, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/users/login', userDetails);\r\n      token.set(data.token);\r\n      toast.success('You are successfully logged in!');\r\n      return data;\r\n    } catch (error) {\r\n      toast.error('Please check if you entered password and email correctly');\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nconst logOut = createAsyncThunk(\r\n  'auth/logout',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      await axios.post('/users/logout');\r\n      token.unset();\r\n      toast.success('See you later!');\r\n    } catch (error) {\r\n      toast.error('Oppps, something went wrong! Try again please');\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nconst refreshUser = createAsyncThunk('users/current', async (_, thunkAPI) => {\r\n  const state = thunkAPI.getState();\r\n  const persistedToken = state.auth.token;\r\n\r\n  if (persistedToken === null) {\r\n    return thunkAPI.rejectWithValue();\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  try {\r\n    const { data } = await axios.get('/users/current');\r\n    return data;\r\n  } catch (error) {\r\n    toast.error('Oppps, something went wrong! Try again please');\r\n    return thunkAPI.rejectWithValue(error.message);\r\n  }\r\n});\r\n\r\nconst operations = {\r\n  register,\r\n  logOut,\r\n  logIn,\r\n  refreshUser,\r\n};\r\nexport default operations;\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-hot-toast';\r\n\r\nexport const getContacts = createAsyncThunk(\r\n  'contacts/getContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const result = await axios.get('/contacts');\r\n      return result.data;\r\n    } catch (error) {\r\n      toast.error('Oppps, something went wrong! Try again please');\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async (newContact, { rejectWithValue }) => {\r\n    try {\r\n      const result1 = await axios.get('/contacts');\r\n      const contactNames = result1.data.map(contact => contact.name);\r\n      const isRepeat = contactNames.indexOf(newContact.name) !== -1;\r\n      if (isRepeat) {\r\n        toast.error(`${newContact.name} is already in Contacts`);\r\n        return;\r\n      } else {\r\n        const result = await axios.post('/contacts', newContact);\r\n        console.log(result.data);\r\n        return result.data;\r\n      }\r\n    } catch (error) {\r\n      toast.error('Oppps, something went wrong! Try again please');\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/delete',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      await axios.delete(`/contacts/${id}`);\r\n      return id;\r\n    } catch (error) {\r\n      toast.error('Oppps, something went wrong! Try again please');\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { toast } from 'react-hot-toast';\r\nimport { getContacts, addContact, deleteContact } from './phonebook-operations';\r\n\r\nconst itemsInitialState = { items: [], status: null, error: null };\r\nconst filterInitialState = '';\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: itemsInitialState,\r\n  extraReducers: {\r\n    [getContacts.fulfilled]: (state, { payload }) => ({\r\n      ...state,\r\n      items: payload,\r\n      status: null,\r\n      error: null,\r\n    }),\r\n    [getContacts.pending]: (state, _) => ({\r\n      ...state,\r\n      status: 'loading',\r\n      error: null,\r\n    }),\r\n    [getContacts.rejected]: (state, { error }) => ({\r\n      ...state,\r\n      status: 'error',\r\n      error: error.message,\r\n    }),\r\n    [addContact.fulfilled]: (state, { payload }) => {\r\n      if (payload) {\r\n        toast.success(`Контакт ${payload.name} добавлен`);\r\n        return {\r\n          ...state,\r\n          items: [...state.items, payload],\r\n          status: null,\r\n          error: null,\r\n        };\r\n      }\r\n      return state;\r\n    },\r\n    [addContact.pending]: (state, _) => ({\r\n      ...state,\r\n      status: 'adding',\r\n      error: null,\r\n    }),\r\n    [addContact.rejected]: (state, { error }) => ({\r\n      ...state,\r\n      status: 'error',\r\n      error: error.message,\r\n    }),\r\n    [deleteContact.fulfilled]: (state, { payload }) => {\r\n      toast.success(`Контакт удален`);\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(contact => contact.id !== payload),\r\n        status: null,\r\n        error: null,\r\n      };\r\n    },\r\n    [deleteContact.pending]: (state, _) => ({\r\n      ...state,\r\n      status: 'deleting',\r\n      error: null,\r\n    }),\r\n    [deleteContact.rejected]: (state, { error }) => ({\r\n      ...state,\r\n      status: 'error',\r\n      error: error.message,\r\n    }),\r\n  },\r\n});\r\n\r\nconst filterSlice = createSlice({\r\n  name: 'filter',\r\n  initialState: filterInitialState,\r\n  reducers: {\r\n    filterContacts(_, { payload }) {\r\n      return payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst contacts = contactsSlice.reducer;\r\nconst filter = filterSlice.reducer;\r\n\r\nexport const { filterContacts } = filterSlice.actions;\r\nexport { contacts, filter };\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport operations from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isRefresh: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [operations.register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [operations.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [operations.logOut.fulfilled](state) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [operations.refreshUser.pending](state) {\r\n      state.isRefresh = true;\r\n    },\r\n    [operations.refreshUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isRefresh = false;\r\n    },\r\n    [operations.refreshUser.rejected](state) {\r\n      state.isRefresh = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { contacts, filter } from 'redux/phonebook/phonebook-slices';\r\nimport authReducer from './Authorization/auth-slices';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst middleware = getDefaultMiddleware =>\r\n  getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  });\r\n\r\nconst phonebookReducer = combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    phonebook: phonebookReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import styled from '@emotion/styled/macro';\r\n\r\nconst CustomContainer = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nexport default CustomContainer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CustomContainer from 'Components/Container/Container.styled';\r\n\r\nfunction Container({ children }) {\r\n  return <CustomContainer>{children}</CustomContainer>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nconst CustomHeader = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 20px;\r\n  align-items: center;\r\n  color: #ffffff;\r\n  background-color: #22803e;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport default CustomHeader;\r\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\r\n\r\nconst getUserEmail = state => state.auth.user.email;\r\n\r\nconst getIsRefreshingCurrent = state => state.auth.isRefresh;\r\n\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getUserEmail,\r\n  getIsRefreshingCurrent,\r\n};\r\nexport default authSelectors;\r\n","import styled from '@emotion/styled/macro';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const CustomNav = styled.nav`\r\n  padding: 12px;\r\n`;\r\n\r\nexport const CustomNavLink = styled(NavLink)`\r\n  display: inline-block;\r\n  text-decoration: none;\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  color: #ffffff;\r\n\r\n  &:hover {\r\n    color: #e0e0e0;\r\n  }\r\n  &.active {\r\n    color: #d9e66b;\r\n  }\r\n`;\r\n\r\nexport const Invitation = styled.span`\r\n  display: inline-block;\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  color: #ffffff;\r\n`;\r\n","import { useSelector } from 'react-redux';\r\nimport authSelectors from 'redux/Authorization/auth-selectors';\r\nimport { CustomNavLink, Invitation, CustomNav } from './NavMenu.styled';\r\n\r\nconst NavMenu = () => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <CustomNav>\r\n      {isLoggedIn ? (\r\n        <CustomNavLink to=\"/contacts\">My Phonebook</CustomNavLink>\r\n      ) : (\r\n        <Invitation>Remember people, not numbers!</Invitation>\r\n      )}\r\n    </CustomNav>\r\n  );\r\n};\r\n\r\nexport default NavMenu;\r\n","import styled from '@emotion/styled/macro';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport const CustomContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: auto;\r\n`;\r\n\r\nexport const UserInvitation = styled.span`\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  margin-right: 12px;\r\n`;\r\n\r\nexport const LogOutBtn = styled(Button)`\r\n  font-weight: 400;\r\n  font-size: 18px;\r\n`;\r\n","import { CustomContainer, UserInvitation, LogOutBtn } from './UserMenu.styled';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport authSelectors from 'redux/Authorization/auth-selectors';\r\nimport authOperations from 'redux/Authorization/auth-operations';\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const email = useSelector(authSelectors.getUserEmail);\r\n\r\n  return (\r\n    <CustomContainer>\r\n      <UserInvitation>Welcome, {email}!</UserInvitation>\r\n      <LogOutBtn\r\n        variant=\"primary\"\r\n        type=\"button\"\r\n        onClick={() => dispatch(authOperations.logOut())}\r\n      >\r\n        Log Out\r\n      </LogOutBtn>\r\n    </CustomContainer>\r\n  );\r\n}\r\n","import styled from '@emotion/styled/macro';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const CustomContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: auto;\r\n`;\r\n\r\nexport const CustomNavLink = styled(NavLink)`\r\n  display: inline-block;\r\n  text-decoration: none;\r\n  padding: 12px;\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  color: #ffffff;\r\n\r\n  &:hover {\r\n    color: #e0e0e0;\r\n  }\r\n  &.active {\r\n    color: #d9e66b;\r\n  }\r\n`;\r\n","import { CustomNavLink, CustomContainer } from './AuthMenu.styled';\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <CustomContainer>\r\n      <CustomNavLink to=\"/register\">Registration</CustomNavLink>\r\n      <CustomNavLink to=\"/login\">Log In</CustomNavLink>\r\n    </CustomContainer>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/phonebook.6b55aa3d.png\";","import { useSelector } from 'react-redux';\r\nimport CustomHeader from './AppBar.styled';\r\nimport NavMenu from 'Components/NavMenu';\r\nimport UserMenu from 'Components/UserMenu';\r\nimport AuthMenu from 'Components/AuthMenu';\r\nimport authSelectors from 'redux/Authorization/auth-selectors';\r\nimport phonebook from 'images/phonebook.png';\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <CustomHeader>\r\n      <img src={phonebook} alt=\"phonebook\" width=\"80\" />\r\n      <NavMenu />\r\n      {isLoggedIn ? <UserMenu /> : <AuthMenu />}\r\n    </CustomHeader>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport authSelectors from 'redux/Authorization/auth-selectors';\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = '/login',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport authSelectors from 'redux/Authorization/auth-selectors';\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/login',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import { Toaster } from 'react-hot-toast';\nimport { useEffect, lazy, Suspense } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Switch, Redirect } from 'react-router-dom';\nimport Container from 'Components/Container';\nimport AppBar from 'Components/AppBar/AppBar';\nimport operations from 'redux/Authorization/auth-operations';\nimport authSelectors from './redux/Authorization/auth-selectors';\nimport PrivateRoute from 'Components/Routes/PrivateRoute';\nimport PublicRoute from 'Components/Routes/PublicRoute';\n\nconst RegisterView = lazy(() => import('Views/RegisterView'));\nconst LoginView = lazy(() => import('Views/LoginView'));\nconst ContactsView = lazy(() => import('Views/ContactsView/ContactsView'));\n\nfunction App() {\n  const isRefreshing = useSelector(authSelectors.getIsRefreshingCurrent);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(operations.refreshUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      {isRefreshing ? (\n        <h1>Загружаем</h1>\n      ) : (\n        <>\n          <AppBar />\n          <Switch>\n            <Suspense fallback={<p>Загружаем...</p>}>\n              <PublicRoute path=\"/\">\n                <Redirect from=\"/\" to=\"/login\" />\n              </PublicRoute>\n              <PublicRoute exact path=\"/register\" restricted>\n                <RegisterView />\n              </PublicRoute>\n              <PublicRoute\n                exact\n                path=\"/login\"\n                redirectTo=\"/contacts\"\n                restricted\n              >\n                <LoginView />\n              </PublicRoute>\n              <PrivateRoute exact path=\"/contacts\" redirectTo=\"/login\">\n                <ContactsView />\n              </PrivateRoute>\n            </Suspense>\n          </Switch>\n        </>\n      )}\n      <Toaster />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from 'redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["Components/Form/Form.styled.jsx","Components/Form/Form.jsx","redux/phonebook/phonebook-selectors.js","Components/ContactList/ContactList.styled.jsx","Components/ContactItem/ContactItem.styled.jsx","Components/ContactItem/ContactItem.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","Views/ContactsView/ContactsView.styled.jsx","Views/ContactsView/ContactsView.jsx"],"names":["CustomForm","Form","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","handleChange","e","target","id","value","onSubmit","preventDefault","newContact","addContact","Group","className","controlId","Label","Control","type","pattern","title","required","placeholder","onChange","Button","variant","getFilter","state","phonebook","filter","getStatus","contacts","status","getError","error","getVisibleContacts","createSelector","items","normalizedFilter","toLowerCase","contact","includes","CustomContactList","ListContactEl","ContactItem","isDeleting","setIsDeleting","onClick","deleteContact","color","height","width","size","ContactList","useSelector","useEffect","getContacts","map","FilterContainer","customId","shortid","generate","Filter","htmlFor","InputGroup","Text","FormControl","event","filterContacts","Wrapper","Invitation","ContactsView"],"mappings":"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","file":"static/js/6.2d1772b0.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst CustomForm = styled(Form)`\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n  border-radius: 3px;\r\n  padding: 20px;\r\n  width: 400px;\r\n  font-size: 20px;\r\n  background-color: #fff;\r\n\r\n  & button {\r\n    margin-top: 10px;\r\n  }\r\n\r\n  & label,\r\n  input {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport default CustomForm;\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addContact } from 'redux/phonebook/phonebook-operations';\r\nimport CustomForm from './Form.styled';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { id, value } = e.target;\r\n    switch (id) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const newContact = { name: name, number: number };\r\n    dispatch(addContact(newContact));\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <CustomForm onSubmit={handleSubmit}>\r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control\r\n          type=\"name\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan, etc.\"\r\n          required\r\n          placeholder=\"Enter name\"\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n        <Form.Label>Phone Number</Form.Label>\r\n        <Form.Control\r\n          type=\"number\"\r\n          name=\"number\"\r\n          id=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          placeholder=\"Enter phone number\"\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Add Contact\r\n      </Button>\r\n    </CustomForm>\r\n  );\r\n}\r\n","import { createSelector } from 'reselect';\r\n\r\nexport const getItems = state => state.phonebook.contacts.items;\r\nexport const getFilter = state => state.phonebook.filter;\r\nexport const getStatus = state => state.phonebook.contacts.status;\r\nexport const getError = state => state.phonebook.contacts.error;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getItems, getFilter],\r\n  (items, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return items.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n","import styled from '@emotion/styled/macro';\r\n\r\nconst CustomContactList = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  color: #013b1b;\r\n  max-width: 600px;\r\n  /* list-style-type: square; */\r\n`;\r\n\r\nexport default CustomContactList;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nconst ListContactEl = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: #fff;\r\n  padding: 10px;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport default ListContactEl;\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Loader from 'react-loader-spinner';\r\nimport { deleteContact } from 'redux/phonebook/phonebook-operations';\r\nimport ListContactEl from './ContactItem.styled';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { BsTrash } from 'react-icons/bs';\r\n\r\nfunction ContactItem({ contact }) {\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDelete = () => {\r\n    setIsDeleting(true);\r\n    dispatch(deleteContact(contact.id));\r\n  };\r\n  return (\r\n    <ListContactEl>\r\n      <span>\r\n        {contact.name}: {contact.number}\r\n      </span>\r\n      <Button type=\"button\" variant=\"warning\" onClick={handleDelete}>\r\n        {isDeleting ? (\r\n          <Loader type=\"Bars\" color=\"#000000\" height={12} width={12} />\r\n        ) : (\r\n          <BsTrash size=\"1.5em\" />\r\n        )}\r\n      </Button>\r\n    </ListContactEl>\r\n  );\r\n}\r\n\r\nexport default ContactItem;\r\n","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from 'redux/phonebook/phonebook-operations';\r\nimport {\r\n  getVisibleContacts,\r\n  getStatus,\r\n  getError,\r\n} from 'redux/phonebook/phonebook-selectors';\r\nimport Loader from 'react-loader-spinner';\r\nimport CustomContactList from './ContactList.styled';\r\nimport ContactItem from 'Components/ContactItem/ContactItem';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const status = useSelector(getStatus);\r\n  const error = useSelector(getError);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <CustomContactList>\r\n      {status === 'loading' && <Loader color=\"#757575\" />}\r\n      {status === 'error' && (\r\n        <p>\r\n          <b>Ooops...something went wrong: </b>\r\n          {error}\r\n        </p>\r\n      )}\r\n      {contacts &&\r\n        !error &&\r\n        contacts.map(contact => (\r\n          <ContactItem key={contact.id} contact={contact} />\r\n        ))}\r\n    </CustomContactList>\r\n  );\r\n}\r\n","import styled from '@emotion/styled/macro';\r\n\r\nconst FilterContainer = styled.div`\r\n  margin-bottom: 20px;\r\n  border-radius: 3px;\r\n  font-size: 20px;\r\n  max-width: 600px;\r\n`;\r\n\r\nexport default FilterContainer;\r\n","import React from 'react';\r\nimport shortid from 'shortid';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { filterContacts } from 'redux/phonebook/phonebook-slices';\r\nimport { getFilter } from 'redux/phonebook/phonebook-selectors';\r\nimport FilterContainer from './Filter.styled';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\n\r\nconst customId = shortid.generate();\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = event => dispatch(filterContacts(event.target.value));\r\n\r\n  return (\r\n    <FilterContainer>\r\n      <Form.Label htmlFor=\"basic-url\">Find Contact by Name</Form.Label>\r\n      <InputGroup className=\"mb-3\">\r\n        <InputGroup.Text id=\"basic-addon3\">\r\n          <AiOutlineSearch />\r\n        </InputGroup.Text>\r\n        <FormControl\r\n          id={customId}\r\n          value={value}\r\n          onChange={onChange}\r\n          name=\"filter\"\r\n          aria-describedby=\"basic-addon3\"\r\n        />\r\n      </InputGroup>\r\n    </FilterContainer>\r\n  );\r\n}\r\n","import styled from '@emotion/styled/macro';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 400px 1fr;\r\n  grid-gap: 40px;\r\n  padding: 20px;\r\n  background-color: #f5f4fa;\r\n`;\r\n\r\nexport const Invitation = styled.h2`\r\n  font-size: 22px;\r\n  color: #1a791f;\r\n`;\r\n","import React from 'react';\r\nimport ContactForm from 'Components/Form';\r\nimport ContactList from 'Components/ContactList';\r\nimport Filter from 'Components/Filter';\r\nimport { Wrapper, Invitation } from './ContactsView.styled';\r\n\r\nfunction ContactsView() {\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <Invitation>Add New Contact</Invitation>\r\n        <ContactForm />\r\n      </div>\r\n      <div>\r\n        <Invitation>Contacts</Invitation>\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default ContactsView;\r\n"],"sourceRoot":""}